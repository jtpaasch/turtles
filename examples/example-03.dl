#include "library/library.dl"

// =========================================================
// Example 02
// =========================================================

/*
------------------------------------------------------------
PROGRAM TEXT
------------------------------------------------------------

L01 {
L02     int x, y;
L03     if (x < 3) {
L04         y = 5;
L05     } else {
L06         ;
L07     }
L08     y = y + 1;
L09 }

------------------------------------------------------------
THE AST
------------------------------------------------------------

                   1 block
+---------------------+------------------+
|                                        |
|                                      2 SL
|                   +--------------------+-------------------+
|                   |                                        |
|                 3 SL                                     16 S
|     +-------------+-----------+                            |
|     |                         |                            |
|   4 SL                       7 S                           |
|   +-+-+                       |                            |
|   |   |          +------------+------------+               |
| 5 SL 6 S         |                         |               |
|   |   |          |              +----------+--------+      |
|   |   |          |              |                   |      |
|   |   |          |           8 block            12 block   |
|   |   |          |              |                   |      |
|   |   |          |            9 SL                13 SL    |
|   |   |          |            +-+-+               +-+-+    |
|   |   |          |            |   |               |   |    |
|   |   |          |         10 SL 11 S          14 SL 15 S  |
|   |   |          |            |   |               |   |    |
{   -   int x, y;  if (x < 3) { -   y = 5; } else { -   ; }  y = y + 1 }
        L02        L03              L04                 L06  L08

*/

progEntry(1).

block(1,2).
stmtList(2,3,16).
stmtList(3,4,7).
stmtList(4,5,6).
nilStmtList(5).

declStmt(6,"L02",601,602).
declSpecList(601,60101,60202).
nilDeclSpecList(60101).
simpleTypeSpec(60102,"int").
declList(602,60201,60202).
declList(60201,6020101,6020102).
nilDeclList(6020101).
varDecl(6020102,"x",602010200).
nilInit(602010200).
varDecl(60202,"y",6020200).
nilInit(6020200).

block(8,9).
stmtList(9,10,11).
nilStmtList(10).

block(12,13).
stmtList(13,14,15).
nilStmtList(14).

ifThenElseStmt(7,"L03",700,8,12).
relOpExpr(700,"<",701,702).
lvalToRvalExpr(701,70100).
lvalExpr(70100,"x").
intLitExpr(702,"3").

valueStmt(11,"L04",1100).
assignOpExpr(1100,"=",1101,1102).
lvalExpr(1101,"y").
intLitExpr(1102,"5").

valueStmt(15,"L05",1500).
emptyExpr(1500).

valueStmt(16,"L08",1600).
assignOpExpr(1600,"=",1601,1602).
lvalExpr(1601,"y").
binOpExpr(1602,"+",160201,160202).
lvalToRvalExpr(160201,16020100).
lvalExpr(16020100,"y").
intLitExpr(160202,"1").
